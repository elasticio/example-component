{
  "title": "example component",
  "description": "An example component with implementations of OIH actions.",
  "version": "3.0.0-dev.1",
  "credentials": {
    "fields": {
      "url": {
        "viewClass": "TextFieldView",
        "label": "API Base URI",
        "required": true,
        "placeholder": "http://localhost:3000"
      },
      "username": {
        "viewClass": "TextFieldView",
        "label": "Username",
        "required": true,
        "placeholder": "myUsername"
      },
      "password": {
        "viewClass": "PasswordFieldView",
        "label": "Password",
        "required": true
      }
    }
  },
  "actions": {
    "makeRawRequest": {
      "main": "./src/actions/makeRawRequest.js",
      "title": "Make Raw Request",
      "help": {
        "description": "Manually construct a request to send to the server.",
        "link": "/components/example/index.html#make-raw-request"
      },
      "fields": {
        "doNotThrow404": {
          "label": "Don't throw error on 404 Response",
          "viewClass": "CheckBoxView"
        }
      },
      "metadata": {
        "in": "./src/schemas/actions/makeRawRequest.in.json",
        "out": "./src/schemas/actions/makeRawRequest.out.json"
      }
    },
    "lookupObject": {
      "main": "./src/actions/lookupObject.js",
      "title": "Lookup object (at most one)",
      "help": {
        "description": "Lookup Object by Unique Criteria",
        "link": "/components/example/index.html#lookup-object-at-most-one"
      },
      "fields": {
        "objectType": {
          "label": "Object Type",
          "viewClass": "SelectView",
          "prompt": "Please select the type of object to lookup",
          "required": true,
          "order": 10,
          "model": {
            "products": "Products",
            "users": "Users"
          }
        },
        "lookupCriteria": {
          "label": "Lookup Criteria",
          "prompt": "Please select the unique field with which you want to lookup the object",
          "viewClass": "SelectView",
          "required": true,
          "require": [
            "objectType"
          ],
          "order": 5,
          "model": "getLookupCriteriaModel"
        },
        "allowCriteriaToBeOmitted": {
          "label": "Allow criteria to be omitted",
          "viewClass": "CheckBoxView",
          "order": 4,
          "note": "If selected, the `Lookup Criteria Value` field is not required"
        },
        "allowZeroResults": {
          "label": "Allow zero results",
          "viewClass": "CheckBoxView",
          "order": 3,
          "note": "When zero objects are found the empty object will be emitted instead of an error"
        }
      },
      "dynamicMetadata": true
    },
    "upsertObject": {
      "main": "./src/actions/upsertObject.js",
      "title": "Upsert Object",
      "help": {
        "description": "Upsert Object",
        "link": "/components/example/index.html#upsert-object"
      },
      "fields": {
        "objectType": {
          "viewClass": "SelectView",
          "order": 10,
          "required": true,
          "label": "Object type",
          "prompt": "Select an Object Type",
          "model": {
            "users": "Users"
          }
        }
      },
      "dynamicMetadata": true
    },
    "deleteObject": {
      "main": "./src/actions/deleteObject.js",
      "title": "Delete Object",
      "help": {
        "description": "Delete Object",
        "link": "/components/example/index.html#delete-object"
      },
      "fields": {
        "objectType": {
          "label": "Object Type",
          "viewClass": "SelectView",
          "prompt": "Please select the type of object to lookup",
          "required": true,
          "order": 10,
          "model": {
            "products": "Products",
            "users": "Users"
          }
        },
        "lookupCriteria": {
          "label": "Lookup Criteria",
          "prompt": "Please select the unique field with which you want to lookup the object",
          "viewClass": "SelectView",
          "required": true,
          "require": [
            "objectType"
          ],
          "order": 5,
          "model": "getLookupCriteriaModel"
        }
      },
      "metadata": {
        "in": "./src/schemas/actions/deleteObject.in.json",
        "out": "./src/schemas/actions/deleteObject.out.json"
      }
    },
    "lookupObjects": {
      "main": "./src/actions/lookupObjects.js",
      "title": "Lookup Objects (plural)",
      "help": {
        "description": "Lookup Objects (plural)",
        "link": "/components/example/index.html#lookup-objects-plural"
      },
      "fields": {
        "objectType": {
          "label": "Object Type",
          "viewClass": "SelectView",
          "prompt": "Please select the type of object to lookup",
          "required": true,
          "order": 10,
          "model": {
            "products": "Products",
            "users": "Users"
          }
        },
        "emitBehavior": {
          "order": 8,
          "viewClass": "SelectView",
          "label": "Emit Behavior",
          "required": true,
          "model": {
            "emitAll": "Emit all",
            "emitPage": "Emit page",
            "emitIndividually": "Emit individually"
          },
          "prompt": "Select an emit behavior"
        },
        "termNumber": {
          "order": 5,
          "viewClass": "TextFieldView",
          "label": "Number of search terms",
          "required": false,
          "placeholder": "Please specify a number of search terms",
          "note": "Enter a positive integer number [1-99] or 0 to lookup all entities of chosen type"
        }
      },
      "dynamicMetadata": true
    },
    "lookupObjectById": {
      "main": "./src/actions/lookupObjectById.js",
      "title": "Lookup Object By ID",
      "help": {
        "description": "Lookup Object By ID",
        "link": "/components/example/index.html#lookup-object-by-id"
      },
      "fields": {
        "objectType": {
          "label": "Object Type",
          "viewClass": "SelectView",
          "prompt": "Please select the type of object to lookup",
          "required": true,
          "order": 10,
          "model": {
            "products": "Products",
            "users": "Users"
          }
        }
      },
      "metadata": {
        "in": "./src/schemas/actions/lookupObjectById.in.json",
        "out": "./src/schemas/actions/lookupObjectById.out.json"
      }
    },
    "deleteObjectById": {
      "main": "./src/actions/deleteObjectById.js",
      "title": "Delete Object By ID",
      "help": {
        "description": "Delete Object By ID",
        "link": "/components/example/index.html#delete-object-by-id"
      },
      "fields": {
        "objectType": {
          "label": "Object Type",
          "viewClass": "SelectView",
          "prompt": "Please select the type of object to lookup",
          "required": true,
          "order": 10,
          "model": {
            "products": "Products",
            "users": "Users"
          }
        }
      },
      "metadata": {
        "in": "./src/schemas/actions/deleteObjectById.in.json",
        "out": "./src/schemas/actions/deleteObjectById.out.json"
      }
    }
  },
  "triggers": {
    "getNewAndUpdatedObjectsPolling": {
      "main": "./src/triggers/getNewAndUpdatedObjectsPolling.js",
      "title": "Get New and Updated Objects Polling",
      "type": "polling",
      "help": {
        "description": "Poll for new and/or updated objects",
        "link": "/components/example/index.html#get-new-and-updated-objects-polling"
      },
      "fields": {
        "objectType": {
          "label": "Object Type",
          "viewClass": "SelectView",
          "prompt": "Please select the type of object to poll on",
          "required": true,
          "order": 90,
          "model": {
            "product": "Products",
            "product-model": "Product models",
            "locale": "Locales",
            "attribute": "Attributes",
            "attribute-group": "Attribute groups",
            "family": "Families",
            "category": "Categories"
          }
        },
        "pollConfig": {
          "label": "Time stamp field to poll on",
          "viewClass": "SelectView",
          "required": false,
          "order": 80,
          "placeholder": "Last Modified",
          "model": {
            "created": "Created",
            "lastModified": "Last Modified"
          },
          "prompt": "Please select a Time stamp field to poll on. Default: Last Modified"
        },
        "emitBehavior": {
          "order": 70,
          "viewClass": "SelectView",
          "label": "Emit Behavior",
          "required": false,
          "placeholder": "Emit individually",
          "prompt": "Select an output method. Defaults to: Emit individually",
          "model": {
            "emitIndividually": "Emit individually",
            "emitPage": "Emit page"
          }
        },
        "pageSize": {
          "required": false,
          "viewClass": "TextFieldView",
          "order": 60,
          "label": "Size of Polling Page",
          "placeholder": "100",
          "help": {
            "description": "Indicates the size of pages to be fetched per search request, defaults to 100, max 500"
          }
        },
        "startTime": {
          "label": "Start Time",
          "viewClass": "TextFieldView",
          "order": 50,
          "placeholder": "1970-01-01T00:00:00.000Z",
          "note": "The timestamp to start polling from (inclusive) - using ISO 8601 Date time utc format - YYYY-MM-DDThh:mm:ssZ. Default value is the beginning of time (January 1, 1970 at 00:00)"
        },
        "endTime": {
          "label": "End Time",
          "viewClass": "TextFieldView",
          "order": 40,
          "placeholder": "2025-01-01T00:00:00.000Z",
          "note": "The timestamp to stop polling (exclusive) - using ISO 8601 Date time utc format - YYYY-MM-DDThh:mm:ssZ. Default value is flow execution time."
        }
      },
      "dynamicMetadata": true
    }
  }
}
